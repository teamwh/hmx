<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hmx.user.dao.HmxUserMapper" >

  <resultMap id="BaseResultMap" type="com.hmx.user.entity.HmxUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
  	<result column="user_name" property="userName" jdbcType="VARCHAR" />
  	<result column="user_aliase" property="userAliase" jdbcType="VARCHAR" />
  	<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
  	<result column="password" property="password" jdbcType="VARCHAR" />
  	<result column="gender" property="gender" jdbcType="INTEGER" />
  	<result column="head_pic" property="headPic" jdbcType="VARCHAR" />
  	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="new_time" property="newTime" jdbcType="TIMESTAMP" />
  	<result column="state" property="state" jdbcType="INTEGER" />
  	<result column="version" property="version" jdbcType="INTEGER" />
  	<result column="createid" property="createid" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
      	<if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
          </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List" >
    id,user_name,user_aliase,user_phone,password,gender,head_pic,create_time,new_time,state,version,createid
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hmx.user.entity.HmxUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hmx_user 
    
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hmx_user 
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hmx_user 
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.hmx.user.entity.HmxUserExample" >
    delete from hmx_user 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  
  <insert id="insert" parameterType="com.hmx.user.entity.HmxUser" keyProperty="id" useGeneratedKeys="true">
    insert into hmx_user  (id,user_name,user_aliase,user_phone,password,gender,head_pic,create_time,new_time,state,version,createid)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userAliase,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{headPic,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{newTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{createid,jdbcType=INTEGER})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.hmx.user.entity.HmxUser" keyProperty="id" useGeneratedKeys="true"  >
    insert into hmx_user 
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userAliase != null" >
        user_aliase,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="headPic != null" >
        head_pic,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="newTime != null" >
        new_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createid != null" >
        createid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAliase != null" >
        #{userAliase,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="headPic != null" >
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newTime != null" >
        #{newTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createid != null" >
        #{createid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update  id="updateByExample" parameterType="map" >
    update hmx_user 
    set id = #{id,jdbcType=INTEGER},
user_name = #{userName,jdbcType=VARCHAR},
user_aliase = #{userAliase,jdbcType=VARCHAR},
user_phone = #{userPhone,jdbcType=VARCHAR},
password = #{password,jdbcType=VARCHAR},
gender = #{gender,jdbcType=INTEGER},
head_pic = #{headPic,jdbcType=VARCHAR},
create_time = #{createTime,jdbcType=TIMESTAMP},
new_time = #{newTime,jdbcType=TIMESTAMP},
state = #{state,jdbcType=INTEGER},
version = #{version,jdbcType=INTEGER},
createid = #{createid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="countByExample" parameterType="com.hmx.user.entity.HmxUserExample" resultType="java.lang.Integer" >
    select count(*) from hmx_user 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update  id="updateByPrimaryKeySelective" parameterType="com.hmx.user.entity.HmxUser" >
    update hmx_user
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=INTEGER} ,
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR} ,
      </if>
      <if test="userAliase != null" >
        user_aliase = #{userAliase,jdbcType=VARCHAR} ,
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR} ,
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR} ,
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER} ,
      </if>
      <if test="headPic != null" >
        head_pic = #{headPic,jdbcType=VARCHAR} ,
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP} ,
      </if>
      <if test="newTime != null" >
        new_time = #{newTime,jdbcType=TIMESTAMP} ,
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER} ,
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER} ,
      </if>
      <if test="createid != null" >
        createid = #{createid,jdbcType=INTEGER} ,
      </if>
    </set >
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.hmx.user.entity.HmxUser" >
    update hmx_user
    set id = #{id,jdbcType=INTEGER},
user_name = #{userName,jdbcType=VARCHAR},
user_aliase = #{userAliase,jdbcType=VARCHAR},
user_phone = #{userPhone,jdbcType=VARCHAR},
password = #{password,jdbcType=VARCHAR},
gender = #{gender,jdbcType=INTEGER},
head_pic = #{headPic,jdbcType=VARCHAR},
create_time = #{createTime,jdbcType=TIMESTAMP},
new_time = #{newTime,jdbcType=TIMESTAMP},
state = #{state,jdbcType=INTEGER},
version = #{version,jdbcType=INTEGER},
createid = #{createid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   
   
</mapper>